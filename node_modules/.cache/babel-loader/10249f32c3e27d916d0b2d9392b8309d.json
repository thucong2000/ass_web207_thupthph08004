{"ast":null,"code":"var _jsxFileName = \"E:\\\\web207.2-react\\\\web207.2\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { getAll, remove, add, edit } from \"./api/productAPI\";\nimport apiCategories from './api/categoryApi';\nimport \"./styles.css\";\nimport Routes from \"./routes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [products, setProducts] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [posts, setPost] = useState([]);\n  useEffect(() => {\n    // call api\n    const getProducts = async () => {\n      try {\n        const {\n          data\n        } = await getAll();\n        setProducts(data);\n      } catch (error) {\n        console.log(\"error\", error);\n      }\n    };\n\n    getProducts();\n  }, []); // Xóa sản phẩm\n\n  const onRemoveHandler = async id => {\n    try {\n      await remove(id);\n      const newProducts = products.filter(item => item.id !== id);\n      setProducts(newProducts);\n    } catch (error) {\n      console.log(error);\n    }\n  }; // Thêm sản phẩm\n\n\n  const onAddHandler = async item => {\n    try {\n      const {\n        data\n      } = await add(item); // tra ve 1 object { data: ..., status: ...}\n\n      setProducts([...products, data]);\n    } catch (error) {\n      console.log(error);\n    }\n  }; // item la 1 {}\n\n\n  const onEditHandler = async item => {\n    try {\n      const {\n        data\n      } = await edit(item);\n      const newProducts = products.map(product => product.id == item.id ? data : product);\n      setProducts(newProducts);\n    } catch (error) {}\n  }; // ví dụ: promise\n  // ------------------------ Categories --------------------\n  // list\n\n\n  useEffect(() => {\n    const getCategories = async () => {\n      try {\n        const {\n          data\n        } = await apiCategories.getAll();\n        setCategories(data);\n      } catch (error) {\n        console.log('failed to request API: ', error);\n      }\n    };\n\n    getCategories();\n  }, []); // remove\n\n  const removeCate = async id => {\n    try {\n      // Xóa danh mục\n      const {\n        data\n      } = await apiCategories.remove(id);\n      const newCate = categories.filter(cate => cate.id !== id); // Lấy ra các sản phẩm không trong danh mục bị xóa\n\n      const newProducts = products.map(product => product.cate_id == id ? { ...product,\n        cate_id: \"0\"\n      } : product);\n      setCategories(newCate);\n      setProduct(newProducts);\n    } catch (error) {\n      console.log('failed to request API: ', error);\n    }\n  }; // add\n\n\n  const addCate = async value => {\n    try {\n      const {\n        data\n      } = await apiCategories.create(value);\n      setCategories([...categories, value]);\n      Swal.fire('Create successful !', 'Click the button to continue.', 'success');\n    } catch (error) {\n      console.log('failed to request API: ', error);\n    }\n  }; // edit\n\n\n  const editCate = async value => {\n    try {\n      const {\n        data\n      } = await apiCategories.update(value.id, value); // dùng map để thay đổi giá trị (value ghi sau để cate để định nghĩa lại các gtri cần thay đổi)\n\n      const newCate = categories.map(cate => cate.id == value.id ? { ...cate,\n        ...value\n      } : cate);\n      setCategories(newCate);\n      Swal.fire('Update successful !', 'Click the button to continue.', 'success');\n    } catch (error) {\n      console.log('failed to request API: ', error);\n    }\n  }; //----------------------- Posts ----------------------------\n\n\n  useEffect(() => {\n    const getPosts = async () => {\n      try {\n        const {\n          data\n        } = await apiPosts.getAll();\n        setPost(data);\n      } catch (error) {\n        console.log('failed to request API: ', error);\n      }\n    };\n\n    getPosts();\n  }, []);\n\n  const removePost = async id => {\n    try {\n      const {\n        data\n      } = await apiPosts.remove(id);\n      const newPosts = posts.filter(post => post.id !== id);\n      setPost(newPosts);\n    } catch (error) {\n      console.log('failed to request API: ', error);\n    }\n  };\n\n  const addPost = async value => {\n    try {\n      const {\n        data\n      } = await apiPosts.create(value);\n      setPost([...posts, value]);\n      Swal.fire('Create successful !', 'Click the button to continue.', 'success');\n    } catch (error) {\n      console.log('failed to request API: ', error);\n    }\n  };\n\n  const editPost = async value => {\n    try {\n      const {\n        data\n      } = await apiPosts.update(value.id, value); // dùng map để thay đổi giá trị (value ghi sau để product để định nghĩa lại các gtri cần thay đổi)\n\n      const newPosts = posts.map(post => post.id == value.id ? { ...posts,\n        ...value\n      } : post);\n      setPost(newPosts);\n      Swal.fire('Update successful !', 'Click the button to continue.', 'success');\n    } catch (error) {\n      console.log('failed to request API: ', error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    categories: categories,\n    products: products,\n    onRemove: onRemoveHandler,\n    onAdd: onAddHandler,\n    onEdit: onEditHandler\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"TU8KLx/bMAl6G+2agvC+qwMUPDo=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/web207.2-react/web207.2/src/App.js"],"names":["useEffect","useState","getAll","remove","add","edit","apiCategories","Routes","App","products","setProducts","categories","setCategories","posts","setPost","getProducts","data","error","console","log","onRemoveHandler","id","newProducts","filter","item","onAddHandler","onEditHandler","map","product","getCategories","removeCate","newCate","cate","cate_id","setProduct","addCate","value","create","Swal","fire","editCate","update","getPosts","apiPosts","removePost","newPosts","post","addPost","editPost"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { getAll, remove, add, edit } from \"./api/productAPI\";\nimport apiCategories from './api/categoryApi';\nimport \"./styles.css\";\nimport Routes from \"./routes\";\n\nexport default function App() {\n  const [products, setProducts] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [posts, setPost] = useState([]);\n  useEffect(() => {\n    // call api\n    const getProducts = async () => {\n      try {\n        const { data } = await getAll();\n        setProducts(data);\n      } catch (error) {\n        console.log(\"error\", error);\n      }\n    };\n    getProducts();\n  }, []);\n  // Xóa sản phẩm\n  const onRemoveHandler = async (id) => {\n    try {\n      await remove(id);\n      const newProducts = products.filter((item) => item.id !== id);\n      setProducts(newProducts);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  // Thêm sản phẩm\n  const onAddHandler = async (item) => {\n    try {\n      const { data } = await add(item); // tra ve 1 object { data: ..., status: ...}\n      setProducts([...products, data]);\n    } catch (error) {\n      console.log(error);\n    }\n  }; // item la 1 {}\n  const onEditHandler = async (item) => {\n    try {\n      const { data } = await edit(item);\n      const newProducts = products.map((product) =>\n        product.id == item.id ? data : product\n      );\n      setProducts(newProducts);\n    } catch (error) {}\n  };\n  // ví dụ: promise\n\n  // ------------------------ Categories --------------------\n  // list\n  useEffect(() => {\n    const getCategories = async () => {\n      try {\n        const { data } = await apiCategories.getAll();\n        setCategories(data);\n      } catch (error) {\n        console.log('failed to request API: ', error);\n      }\n    }\n    getCategories();\n  }, []);\n\n  // remove\n  const removeCate = async (id) => {\n    try {\n      // Xóa danh mục\n      const { data } = await apiCategories.remove(id);\n      const newCate = categories.filter(cate => cate.id !== id);\n      // Lấy ra các sản phẩm không trong danh mục bị xóa\n      const newProducts = products.map(product => product.cate_id == id ? { ...product, cate_id: \"0\" } : product);\n\n\n      setCategories(newCate);\n      setProduct(newProducts);\n    } catch (error) {\n      console.log('failed to request API: ', error);\n    }\n  }\n\n  // add\n  const addCate = async (value) => {\n    try {\n      const { data } = await apiCategories.create(value);\n      setCategories([\n        ...categories,\n        value\n      ]);\n      Swal.fire(\n        'Create successful !',\n        'Click the button to continue.',\n        'success'\n      )\n    } catch (error) {\n      console.log('failed to request API: ', error);\n    }\n  }\n\n  // edit\n  const editCate = async (value) => {\n    try {\n      const { data } = await apiCategories.update(value.id, value);\n      // dùng map để thay đổi giá trị (value ghi sau để cate để định nghĩa lại các gtri cần thay đổi)\n      const newCate = categories.map(cate => (cate.id == value.id ? { ...cate, ...value } : cate));\n      setCategories(newCate);\n      Swal.fire(\n        'Update successful !',\n        'Click the button to continue.',\n        'success'\n      )\n    } catch (error) {\n      console.log('failed to request API: ', error);\n    }\n  }\n\n  //----------------------- Posts ----------------------------\n  useEffect(() => {\n    const getPosts = async () => {\n      try {\n        const { data } = await apiPosts.getAll();\n        setPost(data);\n      } catch (error) {\n        console.log('failed to request API: ', error);\n      }\n    }\n    getPosts();\n  }, []);\n\n  const removePost = async (id) => {\n    try {\n      const { data } = await apiPosts.remove(id);\n      const newPosts = posts.filter(post => post.id !== id);\n      setPost(newPosts);\n    } catch (error) {\n      console.log('failed to request API: ', error);\n    }\n  }\n\n  const addPost = async (value) => {\n    try {\n      const { data } = await apiPosts.create(value);\n      setPost([\n        ...posts,\n        value\n      ]);\n      Swal.fire(\n        'Create successful !',\n        'Click the button to continue.',\n        'success'\n      )\n    } catch (error) {\n      console.log('failed to request API: ', error);\n    }\n  }\n\n  const editPost = async (value) => {\n    try {\n      const { data } = await apiPosts.update(value.id, value);\n      // dùng map để thay đổi giá trị (value ghi sau để product để định nghĩa lại các gtri cần thay đổi)\n      const newPosts = posts.map(post => (post.id == value.id ? { ...posts, ...value } : post));\n      setPost(newPosts);\n      Swal.fire(\n        'Update successful !',\n        'Click the button to continue.',\n        'success'\n      )\n    } catch (error) {\n      console.log('failed to request API: ', error);\n    }\n  }\n  return (\n    <Routes\n      categories={categories}\n      products={products}\n      onRemove={onRemoveHandler}\n      onAdd={onAddHandler}\n      onEdit={onEditHandler}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}