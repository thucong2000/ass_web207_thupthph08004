{"ast":null,"code":"var _jsxFileName = \"E:\\\\web207.2-react\\\\web207.2\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { getAll, remove, add, edit } from \"./api/productAPI\"; // import apiCategories from './api/categoryApi';\n\nimport \"./styles.css\";\nimport Routes from \"./routes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [products, setProducts] = useState([]); // const [categories, setCategories] = useState([]);\n  //---------------------product----------------------------------------\n\n  useEffect(() => {\n    // call api\n    const getProducts = async () => {\n      try {\n        const {\n          data\n        } = await getAll();\n        setProducts(data);\n      } catch (error) {\n        console.log(\"error\", error);\n      }\n    };\n\n    getProducts();\n  }, []); // Xóa sản phẩm\n\n  const removeProduct = async id => {\n    try {\n      await remove(id);\n      const newProducts = products.filter(item => item.id !== id);\n      setProducts(newProducts);\n    } catch (error) {\n      console.log(error);\n    }\n  }; // Thêm sản phẩm\n\n\n  const addProduct = async item => {\n    try {\n      const {\n        data\n      } = await add(item); // tra ve 1 object { data: ..., status: ...}\n\n      setProducts([...products, data]);\n    } catch (error) {\n      console.log(error);\n    }\n  }; // item la 1 {}\n\n\n  const editProduct = async item => {\n    try {\n      const {\n        data\n      } = await edit(item);\n      const newProducts = products.map(product => product.id == item.id ? data : product);\n      setProducts(newProducts);\n    } catch (error) {}\n  }; // ví dụ: promise\n  //------------------------------------------------------------------------------------------\n  //-------------------------category-----------------------------------------\n  // useEffect(() => {\n  //   // call api\n  //   const getCategories = async () => {\n  //     try {\n  //       const { data } = await apiCategories.getAll();\n  //       setCategories(data);\n  //     } catch (error) {\n  //       console.log(\"error\", error);\n  //     }\n  //   };\n  //   getCategories();\n  // }, []);\n  // // Xóa sản phẩm\n  // const removeCate = async (id) => {\n  //   try {\n  //     await remove(id);\n  //     const newCategories = categories.filter((item) => item.id !== id);\n  //     setCategories(newCategories);\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n  // };\n  // // Thêm sản phẩm\n  // const addCate = async (item) => {\n  //   try {\n  //     const { data } = await apiCategories.add(item); // tra ve 1 object { data: ..., status: ...}\n  //     setCategories([...categories, data]);\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n  // }; // item la 1 {}\n  // const editCate = async (item) => {\n  //   try {\n  //     const { data } = await apiCategories.edit(item);\n  //     const newCategories = categories.map((category) =>\n  //     category.id == item.id ? data : category\n  //     );\n  //     setCategories(newCategories);\n  //   } catch (error) {}\n  // };\n\n\n  return /*#__PURE__*/_jsxDEV(Routes // categories={categories}\n  , {\n    products: products,\n    onRemove: removeProduct,\n    onAdd: addProduct,\n    onEdit: editProduct // onRemoveCate={removeCate}\n    // onAddCate={addCate}\n    // onEditCate={editCate}\n\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"f86L6rLANGURv6GE6gupp7+oOp4=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/web207.2-react/web207.2/src/App.js"],"names":["useEffect","useState","getAll","remove","add","edit","Routes","App","products","setProducts","getProducts","data","error","console","log","removeProduct","id","newProducts","filter","item","addProduct","editProduct","map","product"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,GAAzB,EAA8BC,IAA9B,QAA0C,kBAA1C,C,CACA;;AACA,OAAO,cAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC,CAD4B,CAE5B;AAGA;;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMU,WAAW,GAAG,YAAY;AAC9B,UAAI;AACF,cAAM;AAAEC,UAAAA;AAAF,YAAW,MAAMT,MAAM,EAA7B;AACAO,QAAAA,WAAW,CAACE,IAAD,CAAX;AACD,OAHD,CAGE,OAAOC,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB;AACD;AACF,KAPD;;AAQAF,IAAAA,WAAW;AACZ,GAXQ,EAWN,EAXM,CAAT,CAP4B,CAmB5B;;AACA,QAAMK,aAAa,GAAG,MAAOC,EAAP,IAAc;AAClC,QAAI;AACF,YAAMb,MAAM,CAACa,EAAD,CAAZ;AACA,YAAMC,WAAW,GAAGT,QAAQ,CAACU,MAAT,CAAiBC,IAAD,IAAUA,IAAI,CAACH,EAAL,KAAYA,EAAtC,CAApB;AACAP,MAAAA,WAAW,CAACQ,WAAD,CAAX;AACD,KAJD,CAIE,OAAOL,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,GARD,CApB4B,CA6B5B;;;AACA,QAAMQ,UAAU,GAAG,MAAOD,IAAP,IAAgB;AACjC,QAAI;AACF,YAAM;AAAER,QAAAA;AAAF,UAAW,MAAMP,GAAG,CAACe,IAAD,CAA1B,CADE,CACgC;;AAClCV,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcG,IAAd,CAAD,CAAX;AACD,KAHD,CAGE,OAAOC,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,GAPD,CA9B4B,CAqCzB;;;AACH,QAAMS,WAAW,GAAG,MAAOF,IAAP,IAAgB;AAClC,QAAI;AACF,YAAM;AAAER,QAAAA;AAAF,UAAW,MAAMN,IAAI,CAACc,IAAD,CAA3B;AACA,YAAMF,WAAW,GAAGT,QAAQ,CAACc,GAAT,CAAcC,OAAD,IAC/BA,OAAO,CAACP,EAAR,IAAcG,IAAI,CAACH,EAAnB,GAAwBL,IAAxB,GAA+BY,OADb,CAApB;AAGAd,MAAAA,WAAW,CAACQ,WAAD,CAAX;AACD,KAND,CAME,OAAOL,KAAP,EAAc,CAAE;AACnB,GARD,CAtC4B,CA+C5B;AAGF;AAEE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,sBACE,QAAC,MAAD,CACE;AADF;AAEE,IAAA,QAAQ,EAAEJ,QAFZ;AAGE,IAAA,QAAQ,EAAEO,aAHZ;AAIE,IAAA,KAAK,EAAEK,UAJT;AAKE,IAAA,MAAM,EAAEC,WALV,CAME;AACA;AACA;;AARF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GAzGuBd,G;;KAAAA,G","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { getAll, remove, add, edit } from \"./api/productAPI\";\n// import apiCategories from './api/categoryApi';\nimport \"./styles.css\";\nimport Routes from \"./routes\";\n\nexport default function App() {\n  const [products, setProducts] = useState([]);\n  // const [categories, setCategories] = useState([]);\n  \n\n  //---------------------product----------------------------------------\n\n  useEffect(() => {\n    // call api\n    const getProducts = async () => {\n      try {\n        const { data } = await getAll();\n        setProducts(data);\n      } catch (error) {\n        console.log(\"error\", error);\n      }\n    };\n    getProducts();\n  }, []);\n  // Xóa sản phẩm\n  const removeProduct = async (id) => {\n    try {\n      await remove(id);\n      const newProducts = products.filter((item) => item.id !== id);\n      setProducts(newProducts);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  // Thêm sản phẩm\n  const addProduct = async (item) => {\n    try {\n      const { data } = await add(item); // tra ve 1 object { data: ..., status: ...}\n      setProducts([...products, data]);\n    } catch (error) {\n      console.log(error);\n    }\n  }; // item la 1 {}\n  const editProduct = async (item) => {\n    try {\n      const { data } = await edit(item);\n      const newProducts = products.map((product) =>\n        product.id == item.id ? data : product\n      );\n      setProducts(newProducts);\n    } catch (error) {}\n  };\n  // ví dụ: promise\n\n\n//------------------------------------------------------------------------------------------\n\n  //-------------------------category-----------------------------------------\n  // useEffect(() => {\n  //   // call api\n  //   const getCategories = async () => {\n  //     try {\n  //       const { data } = await apiCategories.getAll();\n  //       setCategories(data);\n  //     } catch (error) {\n  //       console.log(\"error\", error);\n  //     }\n  //   };\n  //   getCategories();\n  // }, []);\n  // // Xóa sản phẩm\n  // const removeCate = async (id) => {\n  //   try {\n  //     await remove(id);\n  //     const newCategories = categories.filter((item) => item.id !== id);\n  //     setCategories(newCategories);\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n  // };\n  // // Thêm sản phẩm\n  // const addCate = async (item) => {\n  //   try {\n  //     const { data } = await apiCategories.add(item); // tra ve 1 object { data: ..., status: ...}\n  //     setCategories([...categories, data]);\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n  // }; // item la 1 {}\n  // const editCate = async (item) => {\n  //   try {\n  //     const { data } = await apiCategories.edit(item);\n  //     const newCategories = categories.map((category) =>\n  //     category.id == item.id ? data : category\n  //     );\n  //     setCategories(newCategories);\n  //   } catch (error) {}\n  // };\n  return (\n    <Routes\n      // categories={categories}\n      products={products}\n      onRemove={removeProduct}\n      onAdd={addProduct}\n      onEdit={editProduct}\n      // onRemoveCate={removeCate}\n      // onAddCate={addCate}\n      // onEditCate={editCate}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}